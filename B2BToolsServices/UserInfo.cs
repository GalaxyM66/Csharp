/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace PriceManager
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class UserInfo : TBase
  {

    public string Empid { get; set; }

    public string Empcode { get; set; }

    public string Empname { get; set; }

    public string Deptid { get; set; }

    public string Deptname { get; set; }

    public string Password { get; set; }

    public string Stopflag { get; set; }

    public string Allowlogin { get; set; }

    public UserInfo() {
    }

    public UserInfo(string empid, string empcode, string empname, string deptid, string deptname, string password, string stopflag, string allowlogin) : this() {
      this.Empid = empid;
      this.Empcode = empcode;
      this.Empname = empname;
      this.Deptid = deptid;
      this.Deptname = deptname;
      this.Password = password;
      this.Stopflag = stopflag;
      this.Allowlogin = allowlogin;
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        bool isset_empid = false;
        bool isset_empcode = false;
        bool isset_empname = false;
        bool isset_deptid = false;
        bool isset_deptname = false;
        bool isset_password = false;
        bool isset_stopflag = false;
        bool isset_allowlogin = false;
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                Empid = iprot.ReadString();
                isset_empid = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                Empcode = iprot.ReadString();
                isset_empcode = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                Empname = iprot.ReadString();
                isset_empname = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.String) {
                Deptid = iprot.ReadString();
                isset_deptid = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                Deptname = iprot.ReadString();
                isset_deptname = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.String) {
                Password = iprot.ReadString();
                isset_password = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.String) {
                Stopflag = iprot.ReadString();
                isset_stopflag = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 8:
              if (field.Type == TType.String) {
                Allowlogin = iprot.ReadString();
                isset_allowlogin = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
        if (!isset_empid)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_empcode)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_empname)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_deptid)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_deptname)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_password)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_stopflag)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_allowlogin)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("UserInfo");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        field.Name = "empid";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Empid);
        oprot.WriteFieldEnd();
        field.Name = "empcode";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Empcode);
        oprot.WriteFieldEnd();
        field.Name = "empname";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Empname);
        oprot.WriteFieldEnd();
        field.Name = "deptid";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Deptid);
        oprot.WriteFieldEnd();
        field.Name = "deptname";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Deptname);
        oprot.WriteFieldEnd();
        field.Name = "password";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Password);
        oprot.WriteFieldEnd();
        field.Name = "stopflag";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Stopflag);
        oprot.WriteFieldEnd();
        field.Name = "allowlogin";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Allowlogin);
        oprot.WriteFieldEnd();
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("UserInfo(");
      __sb.Append(", Empid: ");
      __sb.Append(Empid);
      __sb.Append(", Empcode: ");
      __sb.Append(Empcode);
      __sb.Append(", Empname: ");
      __sb.Append(Empname);
      __sb.Append(", Deptid: ");
      __sb.Append(Deptid);
      __sb.Append(", Deptname: ");
      __sb.Append(Deptname);
      __sb.Append(", Password: ");
      __sb.Append(Password);
      __sb.Append(", Stopflag: ");
      __sb.Append(Stopflag);
      __sb.Append(", Allowlogin: ");
      __sb.Append(Allowlogin);
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
